name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Authenticate to Google Cloud
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    # Set up Cloud SDK
    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    # Enable necessary APIs
    - name: Enable APIs
      run: |
        gcloud services enable artifactregistry.googleapis.com
        gcloud services enable run.googleapis.com
        gcloud services enable bigquery.googleapis.com
        gcloud services enable cloudscheduler.googleapis.com
        gcloud services enable secretmanager.googleapis.com

    # Configure Docker for GCR
    - name: Configure Docker
      run: |
        gcloud auth configure-docker gcr.io --quiet
        
    # Building and pushing API container
    - name: Build API container
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/like-her-api:latest ./app/api
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/like-her-api:latest

    # Building and pushing Frontend container
    - name: Build Frontend container
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/like-her-frontend:latest ./app/frontend
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/like-her-frontend:latest

    # Building and pushing Scheduler container
    - name: Build Scheduler container
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/like-her-scheduler:latest ./app/scheduler
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/like-her-scheduler:latest

    # Set up Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.7

    # Initialize Terraform
    - name: Terraform Init
      run: |
        cd infrastructure/terraform
        terraform init

    # Apply Terraform with project_id
    - name: Terraform Apply
      run: |
        cd infrastructure/terraform
        terraform apply -auto-approve \
          -var "project_id=${{ secrets.GCP_PROJECT_ID }}"
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

    # Deploying to Cloud Run
    - name: Deploy API to Cloud Run
      run: |
        gcloud run deploy like-her-api \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/like-her-api:latest \
          --platform managed \
          --region asia-northeast1 \
          --allow-unauthenticated \
          --service-account=admin-for-like-her@for-like-her.iam.gserviceaccount.com

    - name: Deploy Frontend to Cloud Run
      run: |
        gcloud run deploy like-her-frontend \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/like-her-frontend:latest \
          --platform managed \
          --region asia-northeast1 \
          --allow-unauthenticated \
          --service-account=admin-for-like-her@for-like-her.iam.gserviceaccount.com \
          --set-env-vars="API_URL=$(gcloud run services describe like-her-api --platform managed --region asia-northeast1 --format='value(status.url)')"